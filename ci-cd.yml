name: CI/CD Pipeline
   
on:
  push:
    branches: [ master ]  # Ensure this matches the main branch name in your repo

jobs:
  build-and-deploy: 
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-app:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

    - name: Deploy to AWS EC2
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.HOST }}
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan ${{ secrets.HOST }} >> ~/.ssh/known_hosts
        ssh -o "StrictHostKeyChecking=no" ubuntu@${{ secrets.HOST }} 'bash -s' << 'EOF'
          set -e  # Stop execution on any error
          docker pull ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
          # Ensure no conflicts with existing container
          docker stop flask-app-container || true
          docker rm flask-app-container || true
          # Start new container
          docker run -d --name flask-app-container -p 80:80 ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
        EOF
